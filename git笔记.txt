20190118--git笔记

概念
本地工作目录------1      
暂存区------------2
本地版本库--------3
远程版本库--------4

指令：
a:1--add-->2--commit-->3
b:3---push--->4
c:3<---pull---4

	git add:将本地文件  增加  到暂存区
	git commit:将暂存区的内容  提交  到本地仓库（本地分支，默认master分支）
	git push:将本地仓库的内容  推送  到远程仓库（远程分支）
	git pull:将远程仓库的内容  拉取  到本地仓库
	
安装操作：
	安装时：其中有一步选择Use git from git bash only，其他默认下一步
配置path：D:\Program\Git\bin	
配置git：
	右键--git bash，配置本地用户名和邮箱
	git config --global user.name ""
	git config --global user.email ""
	本地查看那路径：C:\Users\xuyoujia\.gitconfig
	或者查看配置指令：git config --list

git统一的托管网站：www.github.com 
为了在本地和远程仓库进行免密钥登录，可以配置ssh
配置免密钥登录ssh：	
	先在本地配置：ssh-keygen -t rsa -C 13517913117@163.com 后面一直回车（在本地生成两个文件，目录：C:\Users\xuyoujia\.ssh）
	发送给远程：在github中settings--SSH and GPG key---title任意，key中输入公钥（注：后面不能有回车或空格）
	
测试能否与远程仓库通信：ssh -T git@github.com
如果成功：在C:\Users\xuyoujia\.ssh会生成一个文件known_hosts
如果失败：1、多尝试几次，防止网络原因，2、检测是否有换行符


在本地新建git项目：
	在项目的根目录 右键-git bash ----git init
	在远程仓库创建项目：生成唯一标识：SSH/HTTPS
	本地项目与远程项目关联：git remote add origin git@github.com:xuyoujia/gitTest.git
	
-----git常见操作--------
第一次发布项目（本地-->远程）
1、git add .      //文件到暂存区，“.”为当前文件
2、git commit -m "注释" //暂存区到本地分支（默认master分支）
3、git push -u origin master

第一次下载项目（远程-->本地）
git clone git@github.com:xuyoujia/gitTest.git

更新（远程-本地）
git pull
提交（本地-远程）在当前工作目录 右键-git bash
git add .
git commit -m "注释"
git push origin master


在eclipse 中的egit使用

2019-01-21---我是github--- ^……^
配置eclipse git
preferences-->team---git---commiting---cloning repositories(克隆项目后存放的路径)
						---configuration:配置git 的用户名和邮箱
preferences-->general---->network--ssh2-->配置免密登录，客户端与服务端通信	
ssh文件的生成，使用dos命令	ssh-keygen -t rsa -C 13517913117@163.com			

egit使用操作
第一次发布：
	share project
	add to index
	commit
	将项目推送到远程---team---remote----push
提交（本地-远程）在当前工作目录
	add to index
	commit
	push
在commit 时：
commit按钮：不能单独push某个文件，只能push整个项目
commit and push按钮：可以单独push某一个文件
下载
import---clone

更新（远程-本地）
remote----pull

处理冲突
发现冲突.进入同步视图，  右键---team---synchronized..
解决冲突：
	1、add to index---添加到本地暂存区
	2、commit--提交到本地分支
	3、pull--获取远程分支的文件到本地分支
	4、在synchronized界面处理冲突，
	5、右键---merge tool或直接修改
	6、然后重新提交add to index ,commit push
